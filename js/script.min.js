const burgerMenu = document.querySelector(".burger"), menu = document.querySelector(".header__menu-wrapper"), header = document.querySelector(".header"); function burgerFunction(e) { burgerMenu.classList.toggle("_active"), menu.classList.toggle("_active"), header.classList.toggle("_active"), document.body.classList.toggle("_lock") } function selectMenu() { const e = document.querySelectorAll("[data-select-menu]"); if (e) { function t(e) { const t = e.target.closest("[data-select-menu]"), s = t.querySelector("[data-select-menu-drop-down]"); t.classList.toggle("_active"), i(s, 300) } function s(e) { const t = e.target.closest("[data-select-menu]"), s = t.querySelector("[data-select-menu-value]"), o = t.querySelector("[data-select-menu-drop-down]"); let i = this.innerHTML; s.innerHTML = i, t.classList.remove("_active"), a(o, 300) } document.documentElement.addEventListener("click", (function (t) { const s = t.target.closest("[data-select-menu]"); e.forEach((e => { if (!s || s !== e) { e.classList.remove("_active"); const t = e.querySelector("[data-select-menu-drop-down]"); a(t, 300) } })) })), e.forEach((e => { const a = e.querySelector("[data-select-menu-button]"), o = e.querySelectorAll("[data-select-menu-option]"); a.addEventListener("click", t), o.forEach((e => { e.addEventListener("click", s) })) })); let a = (e, t = 500) => { e.classList.contains("_slide") || (e.classList.add("_slide"), e.style.transitionProperty = "height, margin, padding", e.style.transitionDuration = t + "ms", e.style.height = e.offsetHeight + "px", e.offsetHeight, e.style.overflow = "hidden", e.style.height = 0, e.style.paddingTop = 0, e.style.paddingBottom = 0, e.style.marginTop = 0, e.style.marginBottom = 0, window.setTimeout((() => { e.style.display = "none", e.style.removeProperty("height"), e.style.removeProperty("padding-top"), e.style.removeProperty("padding-bottom"), e.style.removeProperty("margin-top"), e.style.removeProperty("margin-bottom"), e.style.removeProperty("overflow"), e.style.removeProperty("transition-duration"), e.style.removeProperty("transition-property"), e.classList.remove("_slide") }), t)) }, o = (e, t = 500) => { if (!e.classList.contains("_slide")) { e.classList.add("_slide"), e.style.removeProperty("display"); let s = window.getComputedStyle(e).display; "none" === s && (s = "block"), e.style.display = s; let a = e.offsetHeight; e.style.overflow = "hidden", e.style.height = 0, e.style.paddingTop = 0, e.style.paddingBottom = 0, e.style.marginTop = 0, e.style.marginBottom = 0, e.offsetHeight, e.style.transitionProperty = "height, margin, padding", e.style.transitionDuration = t + "ms", e.style.height = a + "px", e.style.removeProperty("padding-top"), e.style.removeProperty("padding-bottom"), e.style.removeProperty("margin-top"), e.style.removeProperty("margin-bottom"), window.setTimeout((() => { e.style.removeProperty("height"), e.style.removeProperty("overflow"), e.style.removeProperty("transition-duration"), e.style.removeProperty("transition-property"), e.classList.remove("_slide") }), t) } }, i = (e, t = 500) => { if ("none" === window.getComputedStyle(e).display) return o(e, t); a(e, t) } } } function dynamicAdaptiv() { new class { constructor(e) { this.type = e } init() { this.оbjects = [], this.daClassname = "_dynamic_adapt_", this.nodes = [...document.querySelectorAll("[data-da]")], this.nodes.forEach((e => { const t = e.dataset.da.trim().split(","), s = {}; s.element = e, s.parent = e.parentNode, s.destination = document.querySelector(`${t[0].trim()}`), s.breakpoint = t[1] ? t[1].trim() : "767", s.place = t[2] ? t[2].trim() : "last", s.index = this.indexInParent(s.parent, s.element), this.оbjects.push(s) })), this.arraySort(this.оbjects), this.mediaQueries = this.оbjects.map((({ breakpoint: e }) => `(${this.type}-width: ${e}px),${e}`)).filter(((e, t, s) => s.indexOf(e) === t)), this.mediaQueries.forEach((e => { const t = e.split(","), s = window.matchMedia(t[0]), a = t[1], o = this.оbjects.filter((({ breakpoint: e }) => e === a)); s.addEventListener("change", (() => { this.mediaHandler(s, o) })), this.mediaHandler(s, o) })) } mediaHandler(e, t) { e.matches ? t.forEach((e => { this.moveTo(e.place, e.element, e.destination) })) : t.forEach((({ parent: e, element: t, index: s }) => { t.classList.contains(this.daClassname) && this.moveBack(e, t, s) })) } moveTo(e, t, s) { t.classList.add(this.daClassname), "last" === e || e >= s.children.length ? s.append(t) : "first" !== e ? s.children[e].before(t) : s.prepend(t) } moveBack(e, t, s) { t.classList.remove(this.daClassname), void 0 !== e.children[s] ? e.children[s].before(t) : e.append(t) } indexInParent(e, t) { return [...e.children].indexOf(t) } arraySort(e) { "min" === this.type ? e.sort(((e, t) => e.breakpoint === t.breakpoint ? e.place === t.place ? 0 : "first" === e.place || "last" === t.place ? -1 : "last" === e.place || "first" === t.place ? 1 : 0 : e.breakpoint - t.breakpoint)) : e.sort(((e, t) => e.breakpoint === t.breakpoint ? e.place === t.place ? 0 : "first" === e.place || "last" === t.place ? 1 : "last" === e.place || "first" === t.place ? -1 : 0 : t.breakpoint - e.breakpoint)) } }("max").init() } function filterFunction() { const e = document.querySelectorAll("[data-filter]"); e && e.forEach((e => { const t = e.querySelectorAll("[data-filter-category]"), s = e.querySelectorAll("[data-filter-content]"); t.forEach((e => { e.addEventListener("click", (e => { s.forEach((e => { e.classList.contains("_show") && e.classList.remove("_show"), e.classList.contains("_last-child") && e.classList.remove("_last-child") })), t.forEach((e => { e.classList.contains("_active") && e.classList.remove("_active") })); let a = e.target, o = a.dataset.filterCategory; if ("all" === o) s.forEach(((e, t) => { e.classList.add("_show"), t === s.length - 1 && e.classList.add("_last-child") })); else { const e = document.querySelectorAll(`[data-filter-content="${o}"]`); e.forEach(((t, s) => { t.classList.add("_show"), s === e.length - 1 && t.classList.add("_last-child") })) } a.classList.add("_active") })) })) })) } function videoPlay() { const e = document.querySelectorAll("[data-js-video-player]"); e && e.forEach((e => { const t = e.querySelector("[data-js-video-player-button]"), s = e.querySelector("[data-js-video-player-video]"), a = e.querySelector("[data-js-video-player-poster]"); t.addEventListener("click", (function (e) { s.play(), s.controls = !0, t.classList.remove("_active"), a.classList.contains("_active") && a.classList.remove("_active") })), s.addEventListener("pause", (function (e) { s.controls = !1, t.classList.add("_active") })) })) } burgerMenu.addEventListener("click", burgerFunction), selectMenu(), dynamicAdaptiv(), filterFunction(), videoPlay();